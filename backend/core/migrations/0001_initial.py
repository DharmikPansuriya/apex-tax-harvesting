# Generated by Django 4.2.24 on 2025-09-26 16:19

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CGTReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tax_year",
                    models.CharField(
                        help_text="Tax year (e.g., 2024-25)", max_length=7
                    ),
                ),
                (
                    "totals",
                    models.JSONField(help_text="Report totals and calculations"),
                ),
                (
                    "pdf_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to PDF file",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "csv_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to CSV file",
                        max_length=500,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Holding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "isin",
                    models.CharField(
                        help_text="International Securities Identification Number",
                        max_length=12,
                    ),
                ),
                (
                    "sedol",
                    models.CharField(
                        blank=True,
                        help_text="Stock Exchange Daily Official List",
                        max_length=7,
                        null=True,
                    ),
                ),
                (
                    "ticker",
                    models.CharField(help_text="Stock ticker symbol", max_length=20),
                ),
                ("name", models.CharField(help_text="Security name", max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["ticker"],
                "unique_together": {("isin", "sedol")},
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("trade_date", models.DateField(help_text="Date of the transaction")),
                (
                    "qty",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Quantity of shares",
                        max_digits=20,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal("0.000001")
                            )
                        ],
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Price per share",
                        max_digits=20,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal("0.000001")
                            )
                        ],
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.00"),
                        help_text="Transaction fees",
                        max_digits=20,
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=4
                    ),
                ),
                (
                    "account",
                    models.CharField(
                        default="GIA", help_text="Account type", max_length=50
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "holding",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="core.holding",
                    ),
                ),
            ],
            options={
                "ordering": ["trade_date", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="Section104Pool",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "pooled_qty",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.00"),
                        help_text="Total quantity in the pool",
                        max_digits=20,
                    ),
                ),
                (
                    "pooled_cost",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.00"),
                        help_text="Total cost basis in the pool",
                        max_digits=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "holding",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="section104_pool",
                        to="core.holding",
                    ),
                ),
            ],
            options={
                "ordering": ["holding__ticker"],
            },
        ),
        migrations.CreateModel(
            name="DisposalMatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "qty_matched",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Quantity matched between sell and buy",
                        max_digits=20,
                    ),
                ),
                (
                    "disallowed_loss",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.00"),
                        help_text="Loss amount that is disallowed due to 30-day rule",
                        max_digits=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "matched_buy_tx",
                    models.ForeignKey(
                        help_text="The matched buy transaction",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buy_matches",
                        to="core.transaction",
                    ),
                ),
                (
                    "sell_tx",
                    models.ForeignKey(
                        help_text="The sell transaction",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disposal_matches",
                        to="core.transaction",
                    ),
                ),
            ],
            options={
                "ordering": ["sell_tx__trade_date", "created_at"],
            },
        ),
    ]
